"""A = [[5, 3, 0, 0, 8],
     [3, 6, 1, 0, 10],
     [0, 1, 4, -2, 3],
     [0, 0, 1, -3, -2]]"""
"""A = [[1, 2, 0, 0, 5],
     [2, -1, 1, 0, 3],
     [0, 1, -1, 1, 3],
     [0, 0, 1, 1, 7]]"""
A = [[1, 0, 0, 0, -1.2041588],
     [0, 0.08726646666666667, 0.34906586666666667, 0.08726646666666667, -0.4431843617670626],
     [0, 0, 0.08726646666666667, 0.34906586666666667, -0.25587262614047257],
     [0, 0, 0, 1, -0.1309416]]
def progonka(A):
    n = len(A) - 1

    Q = [0] * n
    P = [0] * n
    x = [0] * (n + 1)

    P[0] = A[0][1] / -A[0][0]
    Q[0] = -A[0][-1] / -A[0][0]

    for i in range(1, len(A) - 1):
        P[i] = A[i][1 + i] / (-A[i][i] - A[i][i - 1] * P[i - 1])
        Q[i] = (A[i][i - 1] * Q[i - 1] - A[i][-1]) / (-A[i][i] - A[i][i - 1] * P[i - 1])

    x[n] = (A[n][n - 1] * Q[n - 1] - A[n][-1]) / (-A[n][n] - A[n][n - 1] * P[n - 1])
    for i in range(n - 1, -1, -1):
        x[i] = round(P[i] * x[i + 1] + Q[i], 5)
    print(x)

progonka(A)